# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  azureSubscription: 'Azure for Students(1a920ef8-d9f9-4bd6-8879-5212d71a28c5)'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1037cfcb-7436-485c-8c36-f0b9019fc660'
  imageRepository: 'schlauhausbild'
  containerRegistry: 'schlauhausregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/src/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  appName: 'SchlauHausInstrumententafel'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'SchlauHausUmgebung'
    strategy:
      runOnce:
        deploy:
          steps:
          #- task: KubernetesManifest@0
          #  displayName: Create imagePullSecret
          #  inputs:
          #    action: createSecret
          #    secretName: $(imagePullSecret)
          #    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
#
          #- task: KubernetesManifest@0
          #  displayName: Deploy to Kubernetes cluster
          #  inputs:
          #    action: deploy
          #    manifests: |
          #      $(Pipeline.Workspace)/manifests/deployment.yml
          #      $(Pipeline.Workspace)/manifests/service.yml
          #    imagePullSecrets: |
          #      $(imagePullSecret)
          #    containers: |
          #      $(containerRegistry)/$(imageRepository):$(tag)
          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: 'Azure for Students(1a920ef8-d9f9-4bd6-8879-5212d71a28c5)'
              azureResourceGroup: 'SchlauHaus'
              kubernetesCluster: 'SchlauHausAKSCluster'
              manifests: |
               $(Pipeline.Workspace)/manifests/deployment.yml
               $(Pipeline.Workspace)/manifests/service.yml
              containers: |
               $(containerRegistry)/$(imageRepository):$(tag)